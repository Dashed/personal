#!/usr/bin/env python

# Native imports
import sys
from datetime import timedelta
from time import sleep

# Check stage
try:
    from plumbum import cli
except ImportError, e:    
    print "plumbum module doesn't exist!"
    print "See https://github.com/tomerfiliba/plumbum"
    sys.exit()


class MyTimer(cli.Application):

    #verbose = cli.Flag(["-v", "--verbose"], help = "Enable verbose mode")

    hours = 0
    minutes = 25
    seconds = 0

    def main(self):

        # Set timer
        total = timedelta(hours=self.hours, minutes=self.minutes, seconds=self.seconds)
        for passed_seconds in range(int(total.total_seconds())):
            try:
                sleep(1)
                print total - timedelta(seconds=passed_seconds)
                sys.stdout.write("\033[F") # Cursor up one line
                
            except (KeyboardInterrupt, SystemExit):
                print total - timedelta(seconds=passed_seconds)
                sys.exit() 

        print total - timedelta(seconds=passed_seconds)

        # Alarm
        while True:
            try:
                sleep(1)
                sys.stdout.write('\a')
                sys.stdout.flush()
            except (KeyboardInterrupt, SystemExit):
                print total - timedelta(seconds=passed_seconds)
                sys.exit() 

    @cli.switch("-h", int, help = 'Set hours. Default is 0.')
    def set_hours(self, hours):
        self.hours = hours

    @cli.switch("-m", int, help = 'Set minutes. Default is 25.')
    def set_minutes(self, minutes):
        self.minutes = minutes

    @cli.switch("-s", int, help = 'Set seconds. Default is 0.')
    def set_seconds(self, seconds):
        self.seconds = seconds


if __name__ == "__main__":
    MyTimer.run()


